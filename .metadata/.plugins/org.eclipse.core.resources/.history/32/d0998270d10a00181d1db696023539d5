package local_search;

import java.util.ArrayList;
import java.util.List;

import problem.Action;
import problem.Problem;
import problem.State;
import search.IResultObject;
import search.LocalSearch;

/**
 * Implementation for simulated annealing local search.
 * @author JLepere2
 * @date 02/05/2018
 */
public class SimulatedAnnealing extends LocalSearch {

	public SimulatedAnnealing(ObjectiveFunction fun, Scheduler scheduler) {
		super(fun);
		this.scheduler = scheduler;
	}
	
	public IResultObject execute(Problem p) {
		State currentState = p.getInitialState();
		while (true) {
			int T = this.scheduler.getNextT();
			if (T == 0) return new LocalSearchResult(currentState);
			List<State> successors = new ArrayList<>();
			for (Action a : p.getActions()) {
				if (!a.canExecute(currentState)) continue;
				successors.add(a.execute(currentState));
			}
			if (successors.isEmpty()) return new LocalSearchResult(currentState);
			State successorState = null;
			int delta = 
		}
		
	}
	
	public interface Scheduler {
		
		public int getNextT();
		
	}
	
	private Scheduler scheduler;

}
