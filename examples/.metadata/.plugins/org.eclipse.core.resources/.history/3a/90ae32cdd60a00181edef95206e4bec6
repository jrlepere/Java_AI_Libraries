import local_search.HillClimb;
import local_search.ObjectiveFunction;
import local_search.RandomRestartHillClimb;
import problem.Problem;
import problem.State;

public class Main {

	public static void main(String[] args) {
		
		Problem p = new EightQueensProblem();
		RandomRestartHillClimb algo = new RandomRestartHillClimb(new ObjectiveFunction() {
			public int execute(State s) {
				int count = 0;
				int[] queenLocations = ((EightQueensState) s).getQueenLocations();
				for (int row = 0; row < 8; row ++) {
					int diagOffset = 1;
					for (int col = row + 1; col < 8; col ++) {
						if (queenLocations[row] == queenLocations[col]) count ++;
						else if (queenLocations[row] == queenLocations[col] + diagOffset) count ++;
						else if (queenLocations[row] == queenLocations[col] - diagOffset) count ++;
						diagOffset += 1;
					}
				}
				return count ++;;
			}
		});
		
	}
	
}
